
// --------------------------------------------------------------------------
// Helpers
// --------------------------------------------------------------------------

// RGBa with RGB fallback
// --------------------------------------------------------------------------
// Utilizes the `cs-mix` function of tools.color-schemer.scss
// The `$color-background` variable is optional and defaults to `$color-base-white`
// The `$color` variable can be: rgb(20,20,20), rgba(20,20,20,.8) (the `alpha`
// value rgba is ignored), and #101010.
// Example usage: `@include rgb-alpha(border-color, $color-base-black, .8);`
// Dev dependency: tools.color-schemer.scss!

@mixin rgb-alpha($property, $color, $percent, $background-color: $color-base-white) {
	#{$property}: cs-mix($background-color, $color, $percent);
	#{$property}: rgba($color, $percent);
}

// Input placeholder text
// --------------------------------------------------------------------------
// Example:;
// @include input-placeholder {
//   color: #bfbfbf;
//   font-style: italic;
// }

@mixin input-placeholder {
	&:placeholder { @content; }
}

// Background clip for text
// --------------------------------------------------------------------------
// Based on Divya's pure CSS solution: http://j.mp/19BOwaF

@mixin clip-text($img-url, $fallback-color: $color-base-black) {
	color: $fallback-color;
	-webkit-text-fill-color: transparent;
	background: -webkit-linear-gradient(transparent, transparent), img-url($img-url) repeat;
	background: -o-linear-gradient(transparent, transparent);
	-webkit-background-clip: text;
}

// HiDPI media
// --------------------------------------------------------------------------
// A media query that captures:
//
// - Retina iOS devices
// - Retina Macs running Safari
// - High DPI Windows PCs running IE 8 and above
// - Low DPI Windows PCs running IE, zoomed in
// - Low DPI Windows PCs and Macs running Firefox, zoomed in
// - Android hdpi devices and above
// - Android tvdpi devices, including Google Nexus 7
// - Chrome running on high DPI Macs and PCs
// - Opera running on high DPI Macs, PCs and mobile devices
//
// Please note that that this code assumes you'll swap a 2x version
// of your images. If you'd like to supply finer increments, other
// thresholds might be appropriate.

@mixin hidpi-media($pixel-ratio: 1.3) {
	@media
		only screen and (min-resolution: #{$pixel-ratio}dppx),
		only screen and (min-resolution: #{($pixel-ratio*96)}dpi) {
			@content;
	}
}

// HiDPI background image
// --------------------------------------------------------------------------
// Specify a minimum Webkit device pixel ratio of 1.25 instead of 1.5, to serve
// 2x images to Android devices that are between 1 and 1.5x .
// Firefox and Opera will respond to 1.5x on these devices, but Chrome will not.
// Specify min-resolution, which covers Firefox 19. Opera on Android also supports
// min-resolution.
// Since `dppx` is not supported by all browsers the media query still needs
// the `dpi` fallback
//
// Usage:
//   .logo {
//     @include hidpi-bg-image('logo-2x.png',100px);
//        background: img-url('logo.png') no-repeat;
//     }
//   }

@mixin hidpi-bg-image($image, $width: auto, $height: auto, $pixel-ratio: 1.25) {
	@media
		(min-resolution: #{$pixel-ratio}dppx),
		(min-resolution: #{($pixel-ratio*96)}dpi) {
			background-image: img-url($image);
			background-size: $width $height;
	}
}

// Attention
// --------------------------------------------------------------------------
// Use to give an element some 'attention'
// http://sassmeister.com/gist/35c9c323d22eefdbf293

@mixin attention() {
	&:hover,
	&:active,
	&:focus {
		@content;
	}
}
